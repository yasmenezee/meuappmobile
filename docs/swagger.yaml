openapi: 3.0.0
info:
  title: API de Hotel Brasileiro
  version: v1
  description: API para gerenciar quartos, clientes e reservas de um hotel.

servers:
  - url: http://localhost:3000
    description: Servidor local de desenvolvimento

paths:
  # CLIENTES
  /api/clientes:
    get:
      summary: Buscar todos os clientes
      description: Retorna uma lista de todos os clientes cadastrados.
      responses:
        '200':
          description: Lista de clientes obtida com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Cliente'
        '500':
          description: Erro interno no servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Erro interno no servidor"
    post:
      summary: Criar um novo cliente
      description: Adiciona um novo cliente ao sistema.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  example: "João Silva"
                email:
                  type: string
                  example: "joao.silva@example.com"
                telefone:
                  type: string
                  example: "(11) 99999-9999"
                senha:
                  type: string
                  example: "senha123"
              required:
                - nome
                - email
                - telefone
                - senha
      responses:
        '201':
          description: Cliente criado com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Cliente'
        '400':
          description: Requisição inválida.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Preencha todos os campos!"
        '500':
          description: Erro interno no servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Erro interno no servidor"

  /api/clientes/{id}:
    get:
      summary: Buscar cliente por ID
      description: Retorna os detalhes de um cliente específico com base no seu ID.
      parameters:
        - in: path
          name: id
          required: true
          description: ID do cliente a ser buscado.
          schema:
            type: integer
      responses:
        '200':
          description: Cliente encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Cliente'
        '404':
          description: Cliente não encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Cliente não encontrado"
        '500':
          description: Erro interno no servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Erro interno no servidor"
    put:
      summary: Atualizar cliente
      description: Atualiza os dados de um cliente existente.
      parameters:
        - in: path
          name: id
          required: true
          description: ID do cliente a ser atualizado.
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  example: "João Silva"
                email:
                  type: string
                  example: "joao.silva@example.com"
                telefone:
                  type: string
                  example: "(11) 99999-9999"
                senha:
                  type: string
                  example: "senha123"
      responses:
        '200':
          description: Cliente atualizado com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Cliente'
        '404':
          description: Cliente não encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Cliente não encontrado"
        '500':
          description: Erro interno no servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Erro interno no servidor"
    delete:
      summary: Deletar cliente
      description: Remove um cliente do sistema.
      parameters:
        - in: path
          name: id
          required: true
          description: ID do cliente a ser deletado.
          schema:
            type: integer
      responses:
        '200':
          description: Cliente deletado com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Cliente'
        '404':
          description: Cliente não encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Cliente não encontrado"
        '500':
          description: Erro interno no servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Erro interno no servidor"
  /api/clientes/me:
    get:
      summary: Buscar dados do cliente autenticado
      description: Retorna os dados do cliente logado (com base no token JWT, sem senha).
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Dados do cliente autenticado retornados com sucesso.
        '404':
          description: Cliente não encontrado.
        '401':
          description: Não autenticado.
        '500':
          description: Erro interno no servidor.

  # QUARTOS
  /api/quartos:
    get:
      summary: Buscar todos os quartos
      description: Retorna uma lista de todos os quartos cadastrados.
      responses:
        '200':
          description: Lista de quartos obtida com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Quarto'
        '500':
          description: Erro interno no servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Erro interno no servidor"
    post:
      summary: Adicionar um novo quarto
      description: Adiciona um novo quarto ao sistema.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                imagem_url:
                  type: string
                  example: "https://example.com/image.jpg"
                nome:
                  type: string
                  example: "Quarto Luxo"
                descricao:
                  type: string
                  example: "Quarto com vista para o mar"
                preco:
                  type: number
                  format: float
                  example: 250.00
                quantidade:
                  type: integer
                  example: 5
              required:
                - nome
                - preco
                - quantidade
      responses:
        '201':
          description: Quarto adicionado com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Quarto'
        '400':
          description: Requisição inválida - Preencha todos os campos obrigatórios.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Preencha todos os campos obrigatórios!"
        '500':
          description: Erro interno no servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Erro interno no servidor"

  /api/quartos/{id}:
    get:
      summary: Buscar quarto por ID
      description: Retorna os detalhes de um quarto específico com base no seu ID.
      parameters:
        - in: path
          name: id
          required: true
          description: ID do quarto a ser buscado.
          schema:
            type: integer
      responses:
        '200':
          description: Quarto encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Quarto'
        '404':
          description: Quarto não encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Quarto não encontrado"
        '500':
          description: Erro interno no servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Erro interno no servidor"
    put:
      summary: Atualizar quarto
      description: Atualiza os dados de um quarto existente.
      parameters:
        - in: path
          name: id
          required: true
          description: ID do quarto a ser atualizado.
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                imagem_url:
                  type: string
                  example: "https://example.com/image.jpg"
                nome:
                  type: string
                  example: "Quarto Luxo"
                descricao:
                  type: string
                  example: "Quarto com vista para o mar"
                preco:
                  type: number
                  format: float
                  example: 250.00
                quantidade:
                  type: integer
                  example: 5
      responses:
        '200':
          description: Quarto atualizado com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Quarto'
        '404':
          description: Quarto não encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Quarto não encontrado"
        '500':
          description: Erro interno no servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Erro interno no servidor"
    delete:
      summary: Deletar quarto
      description: Remove um quarto do sistema.
      parameters:
        - in: path
          name: id
          required: true
          description: ID do quarto a ser deletado.
          schema:
            type: integer
      responses:
        '200':
          description: Quarto deletado com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Quarto'
        '404':
          description: Quarto não encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Quarto não encontrado"
        '500':
          description: Erro interno no servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Erro interno no servidor"

  # RESERVAS
  /api/reservas:
    get:
      summary: Buscar todas as reservas
      description: Retorna uma lista de todas as reservas cadastradas.
      responses:
        '200':
          description: Lista de reservas obtida com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Reserva'
        '500':
          description: Erro interno no servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Erro interno no servidor"
    post:
      summary: Criar uma nova reserva
      description: Cria uma nova reserva para um cliente em um quarto específico.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quarto_id:
                  type: integer
                  example: 1
                cliente_id:
                  type: integer
                  example: 2
                hospedes:
                  type: integer
                  example: 3
                inicio:
                  type: string
                  format: date
                  example: "2025-06-01"
                fim:
                  type: string
                  format: date
                  example: "2025-06-05"
              required:
                - quarto_id
                - cliente_id
                - hospedes
                - inicio
                - fim
      responses:
        '201':
          description: Reserva criada com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Reserva'
        '400':
          description: Requisição inválida.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Dados inválidos ou quarto indisponível"
        '500':
          description: Erro interno no servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Erro interno no servidor"

  /api/reservas/{id}:
    get:
      summary: Buscar reserva por ID
      description: Retorna os detalhes de uma reserva específica com base no seu ID.
      parameters:
        - in: path
          name: id
          required: true
          description: ID da reserva a ser buscada.
          schema:
            type: integer
      responses:
        '200':
          description: Reserva encontrada.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Reserva'
        '404':
          description: Reserva não encontrada.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Reserva não encontrada"
        '500':
          description: Erro interno no servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Erro interno no servidor"
    put:
      summary: Atualizar reserva
      description: Atualiza os dados de uma reserva existente.
      parameters:
        - in: path
          name: id
          required: true
          description: ID da reserva a ser atualizada.
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quarto_id:
                  type: integer
                  example: 1
                cliente_id:
                  type: integer
                  example: 2
                hospedes:
                  type: integer
                  example: 3
                inicio:
                  type: string
                  format: date
                  example: "2025-06-01"
                fim:
                  type: string
                  format: date
                  example: "2025-06-05"
      responses:
        '200':
          description: Reserva atualizada com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Reserva'
        '404':
          description: Reserva não encontrada.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Reserva não encontrada"
        '500':
          description: Erro interno no servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Erro interno no servidor"
    delete:
      summary: Deletar reserva
      description: Remove uma reserva do sistema.
      parameters:
        - in: path
          name: id
          required: true
          description: ID da reserva a ser deletada.
          schema:
            type: integer
      responses:
        '200':
          description: Reserva deletada com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Reserva'
        '404':
          description: Reserva não encontrada.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Reserva não encontrada"
        '500':
          description: Erro interno no servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Erro interno no servidor"
  /api/reservas/minhas-reservas:
    get:
      summary: Buscar reservas do usuário autenticado
      description: Retorna todas as reservas feitas pelo usuário logado (com base no token JWT), incluindo informações do quarto.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de reservas do usuário obtida com sucesso.
        '401':
          description: Não autenticado.
        '500':
          description: Erro interno no servidor

components:
  schemas:
    Quarto:
      type: object
      properties:
        id:
          type: integer
          example: 1
        imagem_url:
          type: string
          example: "https://example.com/image.jpg"
        nome:
          type: string
          example: "Quarto Luxo"
        descricao:
          type: string
          example: "Quarto com vista para o mar"
        preco:
          type: number
          format: float
          example: 250.00
        quantidade:
          type: integer
          example: 5

    Cliente:
      type: object
      properties:
        id:
          type: integer
          example: 1
        nome:
          type: string
          example: "João Silva"
        email:
          type: string
          example: "joao.silva@example.com"
        telefone:
          type: string
          example: "(11) 99999-9999"
        senha:
          type: string
          example: "senha123"

    Reserva:
      type: object
      properties:
        id:
          type: integer
          example: 1
        quarto_id:
          type: integer
          example: 1
        cliente_id:
          type: integer
          example: 2
        hospedes:
          type: integer
          example: 3
        inicio:
          type: string
          format: date
          example: "2025-06-01"
        fim:
          type: string
          format: date
          example: "2025-06-05"